libb64: Base64 Encoding/Decoding Routines
======================================

## Changelog ##

Changes by Jens Alfke, Aug 2016
-------------------------------
Using size_t instead of int to represent byte-counts.
Using void* in API to avoid making clients cast their pointers to char*.
Using uint8_t instead of char when dealing with binary data.
Added some explicit casts to fix compiler warnings (like int to char, and long to int.)
Fixed base64_decode_value() range checking some more (non-ASCII input bytes could cause underflow.)
Improved C++ wrapper.

Version 1.2.1 Release
---------------------
Fixed a long-standing bug in src/cdecode.c where value_in was not correctly
checked against the bounds [0..decoding_size)
Thanks to both Mario Rugiero and Shlok Datye for pointing this out.
Added some simple example code to answer some of the most common misconceptions
people have about the library usage.

Version 1.2 Release
-------------------
Removed the b64dec, b64enc, encoder and decoder programs in favour of
a better example, called base64, which encodes and decodes 
depending on its arguments.

Created a solution for Microsoft Visual Studio C++ Express 2010
edition, which simply builds the base64 example as a console application.

Version 1.1 Release
-------------------
Modified encode.h to (correctly) read from the iostream argument,
instead of std::cin.
Thanks to Peter K. Lee for the heads-up.

No API changes.

Version 1.0 Release
-------------------
The current content is the changeset.
